{"version":3,"sources":["contexts/AppStateContext.jsx","hooks/useBooks.js","hooks/useActions.js","components/BookList.jsx","components/LiBrary.jsx","components/Order.jsx","hooks/useOrders.js","page/MainPage.jsx","page/LibraryPage.jsx","api.js","providers/AppStateProvider.jsx","App.js","reportWebVitals.js","index.js"],"names":["AppStateContext","React","createContext","useBooks","useContext","books","searchBook","useActions","addToOrder","remove","removeAll","BookListWrapper","styled","li","BookItem","dl","BookList","map","book","isbn","thumbnail","title","price","sale_price","publisher","url","className","href","target","rel","src","alt","toLocaleString","onClick","LiBraryWrapper","div","LiBrary","useState","text","setText","type","placeholder","name","onKeyDown","e","keyCode","onChange","value","OrderWrapper","aside","Title","SubTitle","Order","orders","totalPrice","useMemo","order","quantity","find","b","reduce","l","r","length","MainPage","LibraryPage","Kakao","axios","create","baseURL","headers","Authorization","bookSearch","params","get","AppStateProvider","children","setBooks","query","setQuery","useEffect","bookSearchHttpHandler","reset","a","sort","page","size","data","documents","concat","setOrders","useCallback","undefined","filter","Provider","App","component","exact","path","compoennt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8587ce6b.chunk.js","sourcesContent":["import React from 'react';\n\nconst AppStateContext = React.createContext();\n\nexport default AppStateContext;\n","import { useContext } from 'react';\nimport AppStateContext from '../contexts/AppStateContext';\n\n// books 데이터를 받아서 내주는 역할을 하는 Hook\nexport default function useBooks() {\n  const { books, searchBook } = useContext(AppStateContext);\n  return { books, searchBook };\n}\n","import { useContext } from 'react';\nimport AppStateContext from '../contexts/AppStateContext';\n\n// 상태를 받아서 보내주는 역할을 하는 useBooks Hook\nexport default function useActions() {\n  const { addToOrder, remove, removeAll } = useContext(AppStateContext);\n\n  return { addToOrder, remove, removeAll };\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport useBooks from '../hooks/useBooks';\nimport useActions from '../hooks/useActions';\nconst BookList = () => {\n  const { books } = useBooks();\n  const { addToOrder } = useActions();\n  return (\n    <BookListWrapper>\n      {books.map((book) => {\n        const { isbn, thumbnail, title, price, sale_price, publisher, url } =\n          book;\n        const click = () => {\n          addToOrder(isbn);\n        };\n        return (\n          <BookItem key={isbn}>\n            <div className='bookImg'>\n              <a href={url} target='_blank' rel='noreferrer'>\n                <img src={thumbnail} alt={thumbnail} />\n              </a>\n            </div>\n            <div className='bookContents'>\n              <div className='bookPublisher'>{publisher}</div>\n              <div className='bookTitle'>{title}</div>\n              <div className='bookPrice'>\n                &#8361; {sale_price.toLocaleString()}\n                <strike>{price.toLocaleString()}</strike>{' '}\n              </div>\n              <div className='icons'>\n                <img src='/img/cart.png' alt='cart' onClick={click} />\n                <a href={url} target='_blank' rel='noreferrer'>\n                  <img src='/img/increase.png' alt='increase' />\n                </a>\n              </div>\n            </div>\n          </BookItem>\n        );\n      })}\n    </BookListWrapper>\n  );\n};\n\nconst BookListWrapper = styled.li`\n  background-color: var(--grey-color);\n  display: grid;\n  width: 90rem;\n  min-height: 40rem;\n  margin: auto;\n  grid-gap: 3rem;\n  grid-template-columns: repeat(3, 1fr);\n`;\nconst BookItem = styled.dl`\n  position: relative;\n  width: 100%;\n  cursor: pointer;\n  overflow: hidden;\n  .bookImg {\n    img {\n      width: 100%;\n    }\n  }\n  .bookContents {\n    position: absolute;\n    text-align: left;\n    position: absolute;\n    bottom: 0;\n    margin: 0 auto;\n    background-color: rgba(36, 76, 112, 0.9);\n    padding: 15px;\n    opacity: 0;\n    visibility: visible;\n    width: 100%;\n  }\n  &:hover {\n    .bookImg {\n      img {\n        opacity: 0.5;\n      }\n    }\n    .bookContents {\n      opacity: 1;\n      transition: all 0.6s 0s;\n      .bookPublisher {\n        margin-bottom: 0.5rem;\n        font-size: 1.2rem;\n        font-weight: 300;\n        color: var(--darkgrey-color);\n      }\n      .bookTitle {\n        margin-bottom: 1rem;\n        font-size: 1.7rem;\n        font-weight: 600;\n        line-height: 25px;\n        color: var(--white-color);\n      }\n      .bookPrice {\n        font-size: 1.5rem;\n        font-weight: 600;\n        line-height: 25px;\n        color: var(--white-color);\n        strike {\n          color: var(--darkgrey-color);\n          font-size: 1.4rem;\n          margin-left: 1rem;\n        }\n      }\n      .icons {\n        display: flex;\n        cursor: pointer;\n        justify-content: flex-end;\n        img {\n          width: 3rem;\n          height: 3rem;\n          margin-left: 2rem;\n        }\n      }\n    }\n  }\n`;\n\nexport default BookList;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport useBooks from '../hooks/useBooks';\nimport BookList from './BookList';\n\nconst LiBrary = () => {\n  const { searchBook } = useBooks();\n  const [text, setText] = useState('');\n\n  // 엔터를 눌렀을 때 호출되는 함수\n  const onEnter = (e) => {\n    if (e.keyCode === 13) {\n      searchBook(text);\n    }\n  };\n  // text 검색어가 바뀔 때 호출되는 함수\n  const onTextUpdate = (e) => {\n    setText(e.target.value);\n  };\n\n  return (\n    <LiBraryWrapper>\n      <h1 className='title'>LIBRARY</h1>\n      <div className='searchBox'>\n        <input\n          type='search'\n          placeholder='검색어를 입력해 주세요.'\n          name='query'\n          onKeyDown={onEnter} // enter\n          onChange={onTextUpdate} // change\n          value={text} // view\n          className='input_search'\n        />\n      </div>\n      <ul>\n        <BookList />\n      </ul>\n    </LiBraryWrapper>\n  );\n};\nconst LiBraryWrapper = styled.div`\n  width: 100rem;\n  margin: 3rem auto;\n  border-radius: 4px;\n  background-color: var(--white-color);\n  padding: 2rem;\n  overflow: hidden;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n  .title {\n    font-family: 'Poppins', sans-serif;\n    color: var(--navy-color);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 5rem;\n  }\n  .books {\n    display: flex;\n  }\n\n  .searchBox {\n    position: relative;\n    width: 70%;\n    height: 5rem;\n    padding: 0 10rem;\n    margin: 4rem auto;\n    background: #fff;\n    text-align: left;\n    box-sizing: border-box;\n  }\n`;\n\nexport default LiBrary;\n","import React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport useActions from '../hooks/useActions';\nimport useBooks from '../hooks/useBooks';\nimport useOrders from '../hooks/useOrders';\n\nconst Order = () => {\n  const orders = useOrders();\n  const { books } = useBooks();\n  const { remove, removeAll } = useActions();\n  const totalPrice = useMemo(() => {\n    return orders\n      .map((order) => {\n        const { isbn, quantity } = order;\n        const book = books.find((b) => b.isbn === isbn);\n        return book.sale_price * quantity;\n      })\n      .reduce((l, r) => l + r, 0);\n  }, [orders, books]);\n  if (orders.length === 0) {\n    return (\n      <OrderWrapper>\n        <Title> You Don't have any orders</Title>\n        <SubTitle>책을 추가해주세요.</SubTitle>\n      </OrderWrapper>\n    );\n  }\n\n  return (\n    <>\n      <OrderWrapper>\n        <Title>장바구니</Title>\n        {orders.map((order) => {\n          const { isbn } = order;\n          const book = books.find((b) => b.isbn === isbn);\n          const click = () => {\n            remove(isbn);\n          };\n          return (\n            <>\n              <div className='item' key={isbn}>\n                <div className='bookImg'>\n                  <img src={book.thumbnail} alt={book.thumbnail} />\n                </div>\n                <div className='content'>\n                  <p className='bookTitle'>\n                    {book.title} {order.quantity}권\n                  </p>\n                  <p className='bookPrice'>\n                    &#8361; {book.sale_price * order.quantity}\n                  </p>\n                </div>\n                <div className='icon'>\n                  <img src='/img/cancel.png' alt='cancel' onClick={click} />\n                </div>\n              </div>\n            </>\n          );\n        })}\n        <div>\n          <hr />\n          <div className='totalItem'>\n            <div className='total'>Total</div>\n            <div className='PriceBox'>\n              <div className='bookTotalPrice'> &#8361; {totalPrice}</div>\n              <div className='icon'>\n                <img src='/img/cancel.png' alt='cancel' onClick={removeAll} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </OrderWrapper>\n    </>\n  );\n};\n\nconst OrderWrapper = styled.aside`\n  position: fixed;\n  bottom: 2rem;\n  right: 2rem;\n  width: 40rem;\n  min-height: 30rem;\n  margin-left: auto;\n  border-radius: 4px;\n  padding: 1rem;\n  background-color: var(--white-color);\n  padding: 2rem;\n  overflow: hidden;\n  border: 2px solid var(--navy-color);\n  h1 {\n    text-align: center;\n    margin-bottom: 4rem;\n  }\n  .item {\n    display: flex;\n    // background-color: var(--grey-color);\n    margin-bottom: 1rem;\n  }\n  .bookImg {\n    img {\n      width: 60px;\n      height: 80px;\n    }\n  }\n  .content {\n    margin: 1rem;\n    font-size: 1.4rem;\n    line-height: 20px;\n    align-items: center;\n    width: 80%;\n    .bookTitle {\n      color: var(--black-color);\n      font-weight: 600;\n    }\n    .bookPrice {\n      color: var(--darkgrey-color);\n    }\n  }\n  .icon {\n    display: flex;\n    margin: 1rem 0;\n    img {\n      width: 2rem;\n      height: 2rem;\n    }\n  }\n  .totalItem {\n    margin-top: 1rem;\n    display: flex;\n    //grid-template-columns: repeat(3, 1fr);\n    align-items: center;\n    .total {\n      color: var(--black-color);\n      font-weight: 600;\n      font-size: 1.8rem;\n      width: 67%;\n    }\n    .PriceBox {\n      display: flex;\n      align-items: center;\n      text-align: right;\n      .bookTotalPrice {\n        color: var(--darkgrey-color);\n        font-weight: 600;\n        font-size: 1.8rem;\n        margin-right: 2rem;\n      }\n    }\n  }\n`;\n\nconst Title = styled.div`\n  font-size: 1.8rem;\n  font-weight: 800;\n  color: var(--navy-color);\n  text-align: center;\n  margin-bottom: 3rem;\n`;\nconst SubTitle = styled.div`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: var(--navy-color);\n`;\n\nexport default Order;\n","import { useContext } from 'react';\nimport AppStateContext from '../contexts/AppStateContext';\n\n// orders 데이터를 받아서 내주는 역할을 하는 Hook\nexport default function useOrders() {\n  const { orders } = useContext(AppStateContext);\n  return orders;\n}\n","import React from 'react';\nimport BookList from '../components/BookList';\nimport LiBrary from '../components/LiBrary';\nimport Order from '../components/Order';\n\nconst MainPage = () => {\n  return (\n    <div>\n      {' '}\n      <LiBrary>\n        <BookList />\n      </LiBrary>\n      <Order />\n    </div>\n  );\n};\n\nexport default MainPage;\n","import React from 'react';\nimport BookList from '../components/BookList';\nimport LiBrary from '../components/LiBrary';\nimport Order from '../components/Order';\n\nconst LibraryPage = () => {\n  return (\n    <div>\n      <LiBrary>\n        <BookList />\n      </LiBrary>\n      <Order />\n    </div>\n  );\n};\n\nexport default LibraryPage;\n","import axios from 'axios';\n//import API_KEY from './API_KEY';\n\nexport const Kakao = axios.create({\n  baseURL: 'https://dapi.kakao.com', // 공통 요청 경로를 지정해준다.\n  headers: {\n    Authorization: `KakaoAK a2ceaaa9b5d8805bcef9c6320a873f8c`,\n    //Authorization: `KakaoAK a2ceaaa9b5d8805bcef9c6320a873f8c`,\n  },\n});\n\n// search book api\nexport const bookSearch = (params) => {\n  return Kakao.get('/v3/search/book?target=title', { params });\n};\n\n// book api\nexport const book = () => {\n  return Kakao.get('/v3/search/book?target=title');\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { bookSearch } from '../api';\nimport AppStateContext from '../contexts/AppStateContext';\n\nconst AppStateProvider = ({ children }) => {\n  const [books, setBooks] = useState([]);\n  const [query, setQuery] = useState('');\n\n  // 책 검색\n  useEffect(() => {\n    if (query.length > 0) {\n      bookSearchHttpHandler(query, true); // 컴포넌트 마운트 후에, 함수를 호출한다.\n    }\n  }, [query]);\n\n  // book search 핸들러\n  const bookSearchHttpHandler = async (query, reset) => {\n    // paramter 설정\n    const params = {\n      query: query,\n      sort: 'accuracy', // accuracy | recency 정확도 or 최신\n      page: 1, // 페이지번호\n      size: 10, // 한 페이지에 보여 질 문서의 개수\n    };\n\n    const { data } = await bookSearch(params); // api 호출\n    if (reset) {\n      setBooks(data.documents);\n    } else {\n      setBooks(books.concat(data.documents));\n    }\n  };\n\n  const searchBook = (text) => {\n    setQuery(text);\n  };\n  const [orders, setOrders] = useState([]);\n\n  // 장바구니 추가\n  // [{isbn, quantity : 1}]\n  const addToOrder = useCallback((isbn) => {\n    setOrders((orders) => {\n      // 동일한 책을 추가할 땐 2권, 3권 으로 변경해주기 위해 동일한 isbn가 있는지 검사\n      const finded = orders.find((order) => order.isbn === isbn);\n      // 장바구니에 동일한 책이 없으면 quantity에 1을 넣어줌\n      if (finded === undefined) {\n        return [...orders, { isbn, quantity: 1 }];\n      } // 동일한 책이 있으면\n      else {\n        return orders.map((order) => {\n          if (order.isbn === isbn) {\n            return {\n              isbn,\n              quantity: order.quantity + 1,\n            };\n          } else {\n            return order;\n          }\n        });\n      }\n    });\n  }, []);\n\n  // 장바구니에서 책 삭제하기\n  const remove = useCallback((isbn) => {\n    setOrders((orders) => {\n      return orders.filter((order) => order.isbn !== isbn);\n    });\n  }, []);\n\n  // 장바구니에서 전체 책 삭제하기\n  const removeAll = useCallback(() => {\n    setOrders([]);\n  }, []);\n\n  return (\n    <AppStateContext.Provider\n      value={{\n        books,\n        searchBook,\n        orders,\n        addToOrder,\n        remove,\n        removeAll,\n      }}>\n      {children}\n    </AppStateContext.Provider>\n  );\n};\n\nexport default AppStateProvider;\n","import React from 'react';\nimport './App.css';\nimport MainPage from './page/MainPage';\nimport LibraryPage from './page/LibraryPage';\nimport AppStateProvider from './providers/AppStateProvider';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <>\n      <AppStateProvider>\n        <BrowserRouter>\n          <Switch>\n            <Route component={MainPage} exact path='/' />\n            <Route compoennt={LibraryPage} path='/library' />\n          </Switch>\n        </BrowserRouter>\n      </AppStateProvider>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}