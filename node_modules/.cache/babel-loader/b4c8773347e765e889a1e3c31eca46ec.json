{"ast":null,"code":"var _jsxFileName = \"/Users/godoyeon/dy/workspace/TIL/react/book/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { bookSearch } from './api';\nimport Item from './Item';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  // 기초 데이터 state, 검색어 state, 쿼리 state를 생성한다.\n  const [books, setBooks] = useState([]);\n  const [text, setText] = useState('');\n  const [query, setQuery] = useState(''); // query state가 업데이트 되면 api 함수를 호출한다.\n\n  useEffect(() => {\n    if (query.length > 0) {\n      bookSearchHttpHandler(); // 컴포넌트 마운트 후에, 함수를 호출한다.\n    }\n  }, [query]); // 엔터를 눌렀을 때 호출되는 함수\n\n  const onEnter = e => {\n    if (e.keyCode === 13) {\n      setQuery(text);\n    }\n  }; // text 검색어가 바뀔 때 호출되는 함수\n\n\n  const onTextUpdate = e => {\n    setText(e.target.value);\n  }; // book search 핸들러\n\n\n  const bookSearchHttpHandler = async (query, reset) => {\n    // paramter 설정\n    const params = {\n      query: query,\n      sort: 'accuracy',\n      // accuracy: 정확도, recency: 최신\n      page: 1,\n      // 페이지 번호\n      size: 10 // 한 페이지에 보여질 문서의 개수\n\n    };\n    const {\n      data\n    } = await bookSearch(params);\n\n    if (reset) {\n      setBooks(data.documents);\n    } else {\n      setBooks(books.concat(data.documents));\n    }\n\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      placsholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825 \\uD558\\uC138\\uC694.\",\n      name: \"query\",\n      onKeyDown: onEnter // enter\n      ,\n      onChange: onTextUpdate // change\n      ,\n      value: text // view\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: books.map((book, index) => {\n        /*#__PURE__*/\n        _jsxDEV(Item, {\n          thumbnail: book.thumbnail,\n          title: book.title,\n          contents: book.contents\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"CWGIqVK5PvTP3Dhnj2AzQmgpTuw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/godoyeon/dy/workspace/TIL/react/book/src/App.js"],"names":["React","useEffect","useState","bookSearch","Item","App","props","books","setBooks","text","setText","query","setQuery","length","bookSearchHttpHandler","onEnter","e","keyCode","onTextUpdate","target","value","reset","params","sort","page","size","data","documents","concat","console","log","map","book","index","thumbnail","title","contents"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA;;AACrB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC,CAJqB,CAMrB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,KAAK,CAACE,MAAN,GAAe,CAAnB,EAAsB;AACpBC,MAAAA,qBAAqB,GADD,CACK;AAC1B;AACF,GAJQ,EAIN,CAACH,KAAD,CAJM,CAAT,CAPqB,CAarB;;AACA,QAAMI,OAAO,GAAIC,CAAD,IAAO;AACrB,QAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AACpBL,MAAAA,QAAQ,CAACH,IAAD,CAAR;AACD;AACF,GAJD,CAdqB,CAmBrB;;;AACA,QAAMS,YAAY,GAAIF,CAAD,IAAO;AAC1BN,IAAAA,OAAO,CAACM,CAAC,CAACG,MAAF,CAASC,KAAV,CAAP;AACD,GAFD,CApBqB,CAwBrB;;;AACA,QAAMN,qBAAqB,GAAG,OAAOH,KAAP,EAAcU,KAAd,KAAwB;AACpD;AACA,UAAMC,MAAM,GAAG;AACbX,MAAAA,KAAK,EAAEA,KADM;AAEbY,MAAAA,IAAI,EAAE,UAFO;AAEK;AAClBC,MAAAA,IAAI,EAAE,CAHO;AAGJ;AACTC,MAAAA,IAAI,EAAE,EAJO,CAIH;;AAJG,KAAf;AAOA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMvB,UAAU,CAACmB,MAAD,CAAjC;;AACA,QAAID,KAAJ,EAAW;AACTb,MAAAA,QAAQ,CAACkB,IAAI,CAACC,SAAN,CAAR;AACD,KAFD,MAEO;AACLnB,MAAAA,QAAQ,CAACD,KAAK,CAACqB,MAAN,CAAaF,IAAI,CAACC,SAAlB,CAAD,CAAR;AACD;;AACDE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACD,GAhBD;;AAiBA,sBACE;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,WAAW,EAAC,2DAFd;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,SAAS,EAAEX,OAJb,CAIsB;AAJtB;AAKE,MAAA,QAAQ,EAAEG,YALZ,CAK0B;AAL1B;AAME,MAAA,KAAK,EAAET,IANT,CAMe;;AANf;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAA,gBACGF,KAAK,CAACwB,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1B;AAAA,gBAAC,IAAD;AAEE,UAAA,SAAS,EAAED,IAAI,CAACE,SAFlB;AAGE,UAAA,KAAK,EAAEF,IAAI,CAACG,KAHd;AAIE,UAAA,QAAQ,EAAEH,IAAI,CAACI;AAJjB,WACOH,KADP;AAAA;AAAA;AAAA;AAAA;AAMD,OAPA;AADH;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAhED;;GAAM5B,G;;KAAAA,G;AAkEN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { bookSearch } from './api';\nimport Item from './Item';\n\nconst App = (props) => {\n  // 기초 데이터 state, 검색어 state, 쿼리 state를 생성한다.\n  const [books, setBooks] = useState([]);\n  const [text, setText] = useState('');\n  const [query, setQuery] = useState('');\n\n  // query state가 업데이트 되면 api 함수를 호출한다.\n  useEffect(() => {\n    if (query.length > 0) {\n      bookSearchHttpHandler(); // 컴포넌트 마운트 후에, 함수를 호출한다.\n    }\n  }, [query]);\n\n  // 엔터를 눌렀을 때 호출되는 함수\n  const onEnter = (e) => {\n    if (e.keyCode === 13) {\n      setQuery(text);\n    }\n  };\n  // text 검색어가 바뀔 때 호출되는 함수\n  const onTextUpdate = (e) => {\n    setText(e.target.value);\n  };\n\n  // book search 핸들러\n  const bookSearchHttpHandler = async (query, reset) => {\n    // paramter 설정\n    const params = {\n      query: query,\n      sort: 'accuracy', // accuracy: 정확도, recency: 최신\n      page: 1, // 페이지 번호\n      size: 10, // 한 페이지에 보여질 문서의 개수\n    };\n\n    const { data } = await bookSearch(params);\n    if (reset) {\n      setBooks(data.documents);\n    } else {\n      setBooks(books.concat(data.documents));\n    }\n    console.log(data);\n  };\n  return (\n    <div>\n      <input\n        type=\"search\"\n        placsholder=\"검색어를 입력 하세요.\"\n        name=\"query\"\n        onKeyDown={onEnter} // enter\n        onChange={onTextUpdate} // change\n        value={text} // view\n      />\n      <ul>\n        {books.map((book, index) => {\n          <Item\n            key={index}\n            thumbnail={book.thumbnail}\n            title={book.title}\n            contents={book.contents}\n          />;\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}