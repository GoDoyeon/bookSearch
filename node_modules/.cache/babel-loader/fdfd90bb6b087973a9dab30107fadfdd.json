{"ast":null,"code":"var _jsxFileName = \"/Users/godoyeon/dy/workspace/study_javascript/bookSearchApp/src/components/SearchBookList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { bookSearch } from '../api';\nimport Item from './Item';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBookList = () => {\n  _s();\n\n  // 기초 데이터 state, 검색어 state, 쿼리 state를 생성한다.\n  const [books, setBooks] = useState([]);\n  const [text, setText] = useState('');\n  const [query, setQuery] = useState('');\n  console.log(`books: ${books.length}`); // ### [refactor] useMemo로 변경해보기\n  // query state가 업데이트 되면 api 함수를 호출한다.\n\n  useEffect(() => {\n    if (query.length > 0) {\n      bookSearchHttpHandler(query, true); // 컴포넌트 마운트 후에, 함수를 호출한다.\n    }\n  }, [query]); // 엔터를 눌렀을 때 호출되는 함수\n\n  const onEnter = e => {\n    if (e.keyCode === 13) {\n      setQuery(text);\n    }\n  }; // text 검색어가 바뀔 때 호출되는 함수\n\n\n  const onTextUpdate = e => {\n    setText(e.target.value);\n  }; // book search 핸들러\n\n\n  const bookSearchHttpHandler = async (query, reset) => {\n    // paramter 설정\n    const params = {\n      query: query,\n      sort: 'accuracy',\n      // accuracy: 정확도, recency: 최신\n      page: 1,\n      // 페이지 번호\n      size: 20 // 한 페이지에 보여질 문서의 개수\n\n    };\n    const {\n      data\n    } = await bookSearch(params);\n\n    if (reset) {\n      setBooks(data.documents);\n    } else {\n      setBooks(books.concat(data.documents));\n    }\n\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"LIBRARY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchBox\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        placsholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\",\n        name: \"query\",\n        onKeyDown: onEnter // enter\n        ,\n        onChange: onTextUpdate // change\n        ,\n        value: text // view\n        ,\n        className: \"input_search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: books.map((book, index) => /*#__PURE__*/_jsxDEV(Item, {\n        thumbnail: book.thumbnail,\n        title: book.title,\n        authors: book.authors,\n        price: book.price,\n        publisher: book.publisher,\n        url: book.url\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchBookList, \"CWGIqVK5PvTP3Dhnj2AzQmgpTuw=\");\n\n_c = SearchBookList;\nexport default SearchBookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBookList\");","map":{"version":3,"sources":["/Users/godoyeon/dy/workspace/study_javascript/bookSearchApp/src/components/SearchBookList.js"],"names":["React","useEffect","useState","bookSearch","Item","SearchBookList","books","setBooks","text","setText","query","setQuery","console","log","length","bookSearchHttpHandler","onEnter","e","keyCode","onTextUpdate","target","value","reset","params","sort","page","size","data","documents","concat","map","book","index","thumbnail","title","authors","price","publisher","url"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { bookSearch } from '../api';\nimport Item from './Item';\n\nconst SearchBookList = () => {\n  // 기초 데이터 state, 검색어 state, 쿼리 state를 생성한다.\n  const [books, setBooks] = useState([]);\n  const [text, setText] = useState('');\n  const [query, setQuery] = useState('');\n\n  console.log(`books: ${books.length}`);\n  // ### [refactor] useMemo로 변경해보기\n  // query state가 업데이트 되면 api 함수를 호출한다.\n  useEffect(() => {\n    if (query.length > 0) {\n      bookSearchHttpHandler(query, true); // 컴포넌트 마운트 후에, 함수를 호출한다.\n    }\n  }, [query]);\n\n  // 엔터를 눌렀을 때 호출되는 함수\n  const onEnter = (e) => {\n    if (e.keyCode === 13) {\n      setQuery(text);\n    }\n  };\n  // text 검색어가 바뀔 때 호출되는 함수\n  const onTextUpdate = (e) => {\n    setText(e.target.value);\n  };\n\n  // book search 핸들러\n  const bookSearchHttpHandler = async (query, reset) => {\n    // paramter 설정\n    const params = {\n      query: query,\n      sort: 'accuracy', // accuracy: 정확도, recency: 최신\n      page: 1, // 페이지 번호\n      size: 20, // 한 페이지에 보여질 문서의 개수\n    };\n\n    const { data } = await bookSearch(params);\n    if (reset) {\n      setBooks(data.documents);\n    } else {\n      setBooks(books.concat(data.documents));\n    }\n    console.log(data);\n  };\n  return (\n    <div className='container'>\n      <h1 className='title'>LIBRARY</h1>\n      <div className='searchBox'>\n        <input\n          type='search'\n          placsholder='검색어를 입력해 주세요.'\n          name='query'\n          onKeyDown={onEnter} // enter\n          onChange={onTextUpdate} // change\n          value={text} // view\n          className='input_search'\n        />\n      </div>\n      <ul>\n        {books.map((book, index) => (\n          <Item\n            key={index}\n            thumbnail={book.thumbnail}\n            title={book.title}\n            authors={book.authors}\n            price={book.price}\n            publisher={book.publisher}\n            url={book.url}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default SearchBookList;\n"]},"metadata":{},"sourceType":"module"}